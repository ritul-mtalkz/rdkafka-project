version: '3'
networks:
  app-network:
    driver: bridge
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: testzookeeper
    ports:
      - '50000:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: testkafka
    ports:
      - '50001:9092'
      - '50002:9093'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'INTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://:9092'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092'
      ALLOW_PLAINTEXT_LISTENER: 'Yes'
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal
    networks:
      - app-network
  producer:
    build:
      dockerfile: Dockerfile
    command: ash -c "node producer"
    container_name: producer
    ports:
      - 4000:4000
    networks:
      - app-network
    depends_on:
      - zookeeper
      - kafka
  consumer:
    build:
      dockerfile: Dockerfile
    command: ash -c "node consumer"
    container_name: consumer
    networks:
      - app-network
    depends_on:
      - zookeeper
      - kafka
volumes: {}